 @using Net7_Social_Net.Models
@{
    ViewData["Title"] = "Tin nhắn"; // Tạo tiêu đề trang
    Layout = null;
    @model List<FriendViewModel>

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="~/css/MessCss.css" />
    <link href="~/Icon_Plafom/iconWeb.png" rel="icon" />
    <style>
        .Card-friend {
            display: flex;
            align-items: center;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 8px;
            margin-bottom: 10px; /* Khoảng cách giữa các card */
            transition: background-color 0.3s, transform 0.3s; /* Hiệu ứng hover */
            cursor: pointer;
            background-color: #f9f9f9;
        }

            .Card-friend:hover {
                background-color: #f0f8ff;
                transform: scale(1.02); /* Phóng to nhẹ khi hover */
            }

            .Card-friend img {
                height: 50px;
                width: 50px;
                border-radius: 50%; /* Avatar hình tròn */
                margin-right: 10px; /* Khoảng cách giữa ảnh và tên */
                object-fit: cover; /* Đảm bảo ảnh không bị méo */
                border: 2px solid #f0f8ff; /* Viền xung quanh avatar */
            }

            .Card-friend a {
                font-size: 16px;
                color: #333;
                text-decoration: none; /* Loại bỏ gạch chân */
                font-weight: bold;
                transition: color 0.3s; /* Hiệu ứng hover */
            }

                .Card-friend a:hover {
                    color: #007bff; /* Đổi màu chữ khi hover */
                }

            .Card-friend.selected {
                background-color: #007bff; /* Màu nền khi được chọn */
                color: white; /* Màu chữ khi được chọn */               
                transform: scale(1.02); /* Phóng to nhẹ khi được chọn */
                transition: background-color 0.3s, transform 0.3s;
            }

                .Card-friend.selected a {
                    color: white; /* Màu chữ khi được chọn */
                    font-size: 20px;
                }

        .messenger {
            flex: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 10px; /* Khoảng cách giữa các tin nhắn */
            overflow-y: auto; /* Cuộn khi nội dung quá dài */
            background-color: #f9f9f9; /* Màu nền nhạt */
        }

        .friendMess,
        .MyMess {
            display: flex;
            align-items: flex-start; /* Căn trên cho avatar và nội dung */
            gap: 10px; /* Khoảng cách giữa avatar và tin nhắn */
        }

        .friendMess {
            justify-content: flex-start; /* Tin nhắn của bạn bè bên trái */
        }

        .MyMess {
            justify-content: flex-end; /* Tin nhắn của mình bên phải */
        }

            .friendMess img,
            .MyMess img {
                width: 40px; /* Kích thước avatar */
                height: 40px;
                border-radius: 50%; /* Avatar hình tròn */
                object-fit: cover; /* Đảm bảo không méo ảnh */
                border: 2px solid #007bff; /* Viền xung quanh avatar */
            }

        .friendChat,
        .myChat {
            max-width: 60%; /* Giới hạn chiều rộng của tin nhắn */
            padding: 10px;
            border-radius: 10px; /* Bo góc cho hộp tin nhắn */
            font-size: 14px;
            line-height: 1.5;
            word-wrap: break-word; /* Tự động xuống dòng khi quá dài */
        }

        .friendChat {
            background-color: #e0e0e0; /* Màu nền tin nhắn của bạn bè */
            color: #333;
        }

        .myChat {
            background-color: #007bff; /* Màu nền tin nhắn của mình */
            color: #fff;
        }

    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.9/signalr.min.js"></script>

</head>
<body>
    @{
        ViewBag.CurrentUserId = Context.Session.GetString("UserId");
    }

    <div class="home">
        <div class="logo">
            <a href="@Url.Action("Index","Home")">
                <img src="~/Icon_Plafom/454849238_800890952251701_8841246141296174912_n.jpg" alt="Logo Web" />
            </a>
        </div>
        <div class="sreachbox">
            <div class="search-wrapper">
                <input type="search" placeholder="Tìm kiếm" />
                <img src="~/Icon_Plafom/Search-icon.png" alt="Search Icon" class="search-icon" />
            </div>
        </div>
        <a id="logout" onclick="return confirmLogout()" style="text-decoration: none; color: red; font-size: 20px;" asp-action="Logout" asp-controller="Login">Đăng xuất</a>
        <script>
            function confirmLogout() {
                return confirm("Bạn có chắc chắn muốn đăng xuất?");
            }
        </script>
    </div>
    <div class="container">
        <div class="right">
            <div class="sreach">
                <input placeholder="Tìm kiếm tin nhắn" type="text" name="" id="" />
                <button type="button">🔍</button>
            </div>
            <div class="user">
                @if (Model != null && Model.Any())
                {
                    foreach (var friend in Model)
                    {
                        <div class="Card-friend" data-friend-id="@friend.FriendID">
                           @if(friend.ProfilePicture==null){
                                <img src="~/Avatar/454849238_800890952251701_8841246141296174912_n.jpg" alt="Avatar hình ảnh" />
                           }
                           else{
                                <img src="@friend.ProfilePicture" alt="Avatar hình ảnh" />
                           }
                            <a href="#">@friend.Username</a>
                        </div>
                    }
                }
                else
                {
                    <p>Không có bạn bè nào để hiển thị.</p>
                }
            </div>
        </div>
        <div class="left">
            <div class="inforuser">
                <div class="UserName" style=" font-weight: bold; font-size: 20px; "></div>
                <div>Trạng thái</div>
            </div>
            <div class="messenger">
                <div class="friendMess">
                    <img src="~/Avatar/454849238_800890952251701_8841246141296174912_n.jpg"
                         alt="" />
                    <div class="friendChat">Hello bạn</div>
                </div>
               
                <div class="MyMess"> 
                    <span class="deletemymess" style="margin:7px">...</span>
                    <div class="myChat">Hi</div> 
               </div> 

            </div>
            <div class="inputmess">
                <input class="input-form" type="text" placeholder="Nhập vào tin nhắn" />
                <button class="butionGui" type="submit">Gửi</button>
            </div>
        </div>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="~/js/AjaxChat.js"></script>

     @*  Finall *@
        <script>
                document.addEventListener("DOMContentLoaded", function () {
                const currentUserId = parseInt("@ViewBag.CurrentUserId"); // Lấy ID người dùng hiện tại

                // Kết nối SignalR
                const connection = new signalR.HubConnectionBuilder()
                    .withUrl(`/chathub?userId=${currentUserId}`)
                    .build();

                connection.start().catch(err => console.error("SignalR connection error:", err));

                const messenger = document.querySelector(".messenger");
                const sendButton = document.querySelector(".butionGui");
                const inputField = document.querySelector(".input-form");

                // **1. Gửi tin nhắn**
                sendButton.addEventListener("click", function () {
                    const message = inputField.value.trim();
                    const selectedFriend = document.querySelector(".Card-friend.selected");

                    if (!selectedFriend) {
                        alert("Vui lòng chọn một người bạn để gửi tin nhắn.");
                        return;
                    }

                    const receiverId = parseInt(selectedFriend.getAttribute("data-friend-id"));

                    if (message && receiverId) {
                        connection.invoke("SendMessage", currentUserId, receiverId, message)
                            .then(() => {
                                inputField.value = ""; // Xóa nội dung nhập
                                messenger.scrollTop = messenger.scrollHeight; // Cuộn xuống cuối
                            })
                            .catch(err => console.error("Error sending message:", err));
                    }
                });

                // **2. Nhận tin nhắn của người nhận**
                connection.on("ReceiveMessage", function (senderId, profilePicture, message, messengerId) {
                    const selectedFriend = document.querySelector(".Card-friend.selected");
                    if (!selectedFriend || parseInt(selectedFriend.getAttribute("data-friend-id")) !== senderId) {
                        return;
                    }

                    const messageElement = document.createElement("div");
                    messageElement.classList.add("friendMess");
                    messageElement.setAttribute("data-messenger-id", messengerId);

                    const avatar = document.createElement("img");
                    avatar.src = profilePicture || "/Avatar/454849238_800890952251701_8841246141296174912_n.jpg";;
                    avatar.alt = "Avatar";

                    const chat = document.createElement("div");
                    chat.classList.add("friendChat");
                    chat.textContent = message;

                    messageElement.appendChild(avatar);
                    messageElement.appendChild(chat);
                    messenger.appendChild(messageElement);

                    messenger.scrollTop = messenger.scrollHeight; // Cuộn xuống cuối
                });

                // **3. Nhận tin nhắn của người gửi**
                connection.on("MyReceiveMessage", function (senderId, profilePicture, message, messengerId) {
                    const myMessageElement = document.createElement("div");
                    myMessageElement.classList.add("MyMess");
                    myMessageElement.setAttribute("data-messenger-id", messengerId);

                    const deleteSpan = document.createElement("span");
                    deleteSpan.classList.add("deletemymess");
                    deleteSpan.style.margin = "7px";
                    deleteSpan.textContent = "...";

                    const myChat = document.createElement("div");
                    myChat.classList.add("myChat");
                    myChat.textContent = message;

                    myMessageElement.appendChild(deleteSpan);
                    myMessageElement.appendChild(myChat);
                    messenger.appendChild(myMessageElement);

                    messenger.scrollTop = messenger.scrollHeight; // Cuộn xuống cuối
                });

                // **4. Lắng nghe sự kiện xóa tin nhắn từ server**
                connection.on("MessageDeleted", function (messengerId) {
                    const messageElement = document.querySelector(`[data-messenger-id="${messengerId}"]`);
                    if (messageElement) {
                        messageElement.remove(); // Xóa tin nhắn khỏi giao diện
                        console.log(`Tin nhắn với ID ${messengerId} đã được xóa từ server.`);
                    }
                });

                // **5. Gửi yêu cầu xóa tin nhắn**
                messenger.addEventListener("click", function (event) {
                    if (event.target.classList.contains("deletemymess")) {
                        const myMessageElement = event.target.closest(".MyMess");
                        const messengerId = parseInt(myMessageElement.getAttribute("data-messenger-id"));

                        if (confirm("Bạn có chắc chắn muốn xóa tin nhắn này?")) {
                            connection.invoke("DeleteMessage", messengerId)
                                .catch(err => console.error("Error deleting message:", err));
                        }
                    }
                });

                // **6. Chọn bạn bè**
                document.querySelectorAll(".Card-friend").forEach(card => {
                    card.addEventListener("click", function () {
                        document.querySelectorAll(".Card-friend").forEach(c => c.classList.remove("selected"));
                        this.classList.add("selected");
                        messenger.innerHTML = ""; // Xóa tin nhắn cũ khi chọn bạn mới
                    });
                });
            });

        </script>
    
    </div>
</body>
</html>

